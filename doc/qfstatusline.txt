*qfstatusline.txt* Set statusline at quickfix error list.

Author:  KazuakiM <twitter@NanohaAsOnKai>
License: MIT License.

==============================================================================
CONTENTS					*qfstatusline-contents*

INTRODUCTION			|qfstatusline-introduction|
INTERFACE			|qfstatusline-interface|
  VARIABLES			  |qfstatusline-variables|
  COMMANDS			  |qfstatusline-commands|
  FUNCTIONS			  |qfstatusline-functions|
USAGE				|qfstatusline-usage|
  BASE				  |qfstatusline-base|
  DEFAULT			  |qfstatusline-default|
  LIGHTLINE.VIM			  |qfstatusline-lightline.vim|

==============================================================================
INTRODUCTION					*qfstatusline-introduction*

This Vim plugin is plugin supporting watchdogs. If watchdogs check syntax
error, This plugin execute statusline plugin function and statusline plugin
call back to get error messages.

==============================================================================
INTERFACE					*qfstatusline-interface*

------------------------------------------------------------------------------
VARIABLES					*qfstatusline-variables*

(require)					*g:Qfstatusline#UpdateCmd*
g:Qfstatusline#UpdateCmd = function({value})
	This variable is statusline update function variable.

(option)					*g:Qfstatusline#Text*
g:Qfstatusline#Text = {vaslu}
	This variable is quickfix text message setting. If {value} is 1,
	show quickfix text message.

------------------------------------------------------------------------------
COMMANDS					*qfstatusline-commands*

:QfstatuslineUpdate				*:QfstatuslineUpdate*
	Execute |qfstatusline#Qfstatusline()| program.

------------------------------------------------------------------------------
FUNCTIONS					*qfstatusline-functions*

qfstatusline#Qfstatusline()			*qfstatusline#Qfstatusline()*
	Execute *g:Qfstatusline#UpdateCmd* function.

qfstatusline#Update()				*qfstatusline#Update()*
	return message, quickfix error list parameter {lnum}.

==============================================================================
USAGE						*qfstatusline-usage*

------------------------------------------------------------------------------
BASE						*qfstatusline-base*

This setting is using quickrun.

>
	NeoBundle 'Shougo/vimproc'
	NeoBundle 'thinca/vim-quickrun'
	let g:quickrun_config = {
	\    'watchdogs_checker/_' : {
	\        'hook/qfstatusline_update/enable_exit':   1,
	\        'hook/qfstatusline_update/priority_exit': 4,},}
	NeoBundle 'osyo-manga/shabadou.vim'
	NeoBundle 'osyo-manga/vim-watchdogs'
	NeoBundle 'KazuakiM/vim-qfstatusline'
<

------------------------------------------------------------------------------
DEFAULT						*qfstatusline-default*

This setting is using |qfstatusline-base| too.

>
	function! StatuslineUpdate()
	    return qfstatusline#Update()
	endfunction
	let g:Qfstatusline#UpdateCmd = function('StatuslineUpdate')
	set statusline=\ %{mode()}\ \|\ %t\ %m\ %r\ %h\ %w\ %q\ 
	set statusline+=%{StatuslineUpdate()}%=\|\ %Y\ \|\ %{&fileformat}\ 
	set statusline+=\|\ %{&fileencoding}\ 
<

------------------------------------------------------------------------------
LIGHTLINE.VIM					*qfstatusline-lightline.vim*

This setting is using |qfstatusline-base| too.

>
	NeoBundle 'itchyny/lightline.vim'
	let g:lightline = {
	\    'active': {
	\        'left':  [['mode','paste'],['filename','qfstatusline']],
	\        'right': [['lineinfo'],['percent'],
	\                  ['fileformat','fileencoding','filetype']]},
	\    'component_expand': {'qfstatusline': 'qfstatusline#Update'},
	\    'component_type':   {'qfstatusline': 'error'}}
	let g:Qfstatusline#UpdateCmd = function('lightline#update')
<

==============================================================================
vim:tw=78:ts=8:ft=help:norl
